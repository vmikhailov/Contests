using System;
using NUnit.Framework;

namespace Codewars.Codewars.Morse
{
    [TestFixture]
    public class MorseCodeDecoderTests
    {
        [TestCase(".... . -.--   .--- ..- -.. .", "HEY JUDE")]
        [TestCase("   .   . ", "E E")]
        public void MorseCodeDecoderBasicTest_1(string input, string expected)
        {
            try
            {
                var actual = MorseCodeDecoder.Decode(input);

                Assert.AreEqual(expected, actual);
            }
            catch (Exception ex)
            {
                Assert.Fail("There seems to be an error somewhere in your code. Exception message reads as follows: " + ex.Message);
            }
        }

        [TestCase(
            "11001100110011000000110000001111110011001111110011111100000000000000110" +
            "01111110011111100111111000000110011001111110000001111110011001100000011",
            "HEY JUDE")]
        [TestCase("01110", "E")]
        [TestCase("1", "E")]
        [TestCase("10001", "EE")]
        public void TestHuman1(string code, string expected)
        {
            var realString = MorseCodeDecoder.DecodeBits(code);
            Assert.AreEqual(expected, MorseCodeDecoder.Decode(realString));
        }

        [TestCase(
            "0000000011011010011100000110000001111110100111110011111100000000000111" +
            "0111111110111110111110000001011000111111000001111100111011000001000000",
            "HEY JUDE")]
        [TestCase(
            "000000000001111111000000110100011101110000000011100000000000000000011111110111111000011011111000001111001111000111111000000010111" +
            "000000111111100100011111001100000111111001011111000000000000001111111000011110101100000110001111100100000111111100011111100111111" +
            "100000100011111100011111111000000011111111011100000000000000101100001111111101111000001111101111100111111100000000111110010110111" +
            "110000000000001110111110111110111110000000100010011111000001111101111111100000011100111111000111110100000011000010010000000000000" +
            "000001111111100111110111111000000100010010000111110000001000000001011111010000000000000111111000000111101000010011000000000011100" +
            "000000000000011011111011110001000001000011111111100000000011111100111111000111011000001111110000110111110001111110000000000000000" +
            "011111100001001100000111111011111110111111111000000011111100011111000010000000000000000000000000000000000000000000000000000000000",
            "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG")]
        [TestCase(
            "000000000000000111111110000000111111111111000000000001111111110000011111111101000000001111111111110110000111111110111111111" +
            "110000000000000000000111111111100001100011111111111110001110000000000011111111111100001111111111000011001111111111100000000" +
            "0011111111111101110000111000000000000000000111111111101011111111011000000000000000111111111110000111111111111000010000111111" +
            "1111111100000000000111111111000000011000000111000000000000000000000000000011110001111100000111100000000111111111100111111111" +
            "1001111111111111000000000111100111110111111100000000000000000000001111111111100000000111110000000111110000000011111111111100" +
            "00000001111100011111111000000000111111111110000011000000000111110000000111000000000011111111111111000111001111111111001111110" +
            "000000000000000000001111000111111111100001111111111111100100000000001111111100111111110111111110000000011101111111000111000000" +
            "0010011111110000000011111111110000000001111000011111110000000000000111111111001111111101111111111000000000001111111100000011000" +
            "00000000000000000111111101010000010000001111111100000000011111000111111111000000111111111110011111111001111111110000000011000111" +
            "111110000111011111111111100001111100001111111100000000000011110011101110001000111111110000000001111000011111110010110001111111111" +
            "00000000000000000011111111111000000010000000000000000001111011111000000100001110111000000000001111111110000001111111111110011111" +
            "1111111000111111111000001111111100000000000001110111111111111000000110011111111111101110001111111111100000000111100000111100000" +
            "1111111111000001111111111110000000111111110000000000010000001111000000010000011111001111111111100000000000000000000100011111111" +
            "0000001111111110000000000000010000111111111111011100111111111110000011111110000111111111100000000000000000000000001110000011111" +
            "1111111011110000000010000000011111111100011111111111100001110000111111111111100000000000000111110000011111001111111100000000000" +
            "011100011100000000000011111000001111111111101000000001110000000000000000000000000000111110010000000000111111111000011111111110" +
            "00000000011111111111110111111111110000000001000000000000001111111110010000110000000000000011110011110000000000110000000111111111" +
            "11100000000111111111110000000001111000000000000000000001111011111111111110000000000011110000111110000111100000000011001111111001" +
            "11000000000100111000000000000111110000010000011111000000000000001111111111100000000110111111111100000000000000111111111111100000" +
            "11100000000011111111000111100000011111111011111100000000111100000000001000011111111100001111000111111111011111000011111111111100" +
            "00000000000000000000001111111111100000001110111111111000111111100000000011111111100000111111111001111111100000000011111111111001" +
            "11111111110000000000110000000000000000001000011111111110000000001111111110000000000000000000000011111111111111000000111111111000" +
            "00111111111000000000011111111000001000000001111111100001111100111111110000000111000000001111000000000101111111100001111101111111" +
            "11100110111111111110000000000000000001000111111111111011111111000000000000000011000000000000000000111100101111100000000111111111" +
            "00000000001111100011111111111101100000000111110000011110000111111111111000000001111111111100001110111111111110111000000000011111" +
            "11110111110001111111111000000000000000000000000001000011111111110000000000111111111011111000000000000000000000011000001111000000" +
            "00000011111111111001100011111111000000111000000000001111100000000111111111100000111110000011110001100000000111000000000000001111" +
            "00001111111111100000111000000001111111111000000111111111100110000000001111000001111111100011100001111111110000010011111111110000" +
            "00000000000000011110000001111100000111100000000011111100111000000001111111100010000000000001111111100001100111111110000000000011" +
            "0111000000000000111111111111000100000000111111111110000001111111111011100000000000000000000000000",
            "E")]
        [TestCase("01110", "E")]
        [TestCase("110011", "I")]
        [TestCase("101", "I")]
        [TestCase("", "")]
        public void TestHuman2(string code, string expected)
        {
            var encoded = MorseCodeDecoder.Encode(expected);
            var realString = MorseCodeDecoder.DecodeBitsAdvanced(code);

            var decoded = MorseCodeDecoder.Decode(realString);
            Assert.AreEqual(expected, decoded);
        }
    }
}