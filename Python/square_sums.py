def square_sums(n, start=0, median=0):
    max_square = int((2 * n - 1) ** .5)
    squares = [x * x for x in range(2, max_square + 1)]

    graph = [None]
    if n >= 51:
        start = starts[n - 25]
        median = medians[n - 25]

    for x in range(1, n + 1):
        siblings = []
        for y in [y - x for y in squares]:
            if 0 < y <= n and x != y:
                siblings.append(y)
        siblings = list(sorted(siblings, key=lambda x: abs(median - x)))
        graph.append(siblings)

    result = impl(start, graph)
    return result


def length(x):
    return len(x) if x is not None else 0


def get_next(iterator):
    try:
        value = next(iterator)
    except StopIteration:
        return None
    else:
        return value


def impl(start, graph):
    n = len(graph) - 1
    used = [False] * (n + 1)
    count = [length(x) for x in graph]

    def process(p, d):
        count[p] += d
        for v in graph[p]:
            if not used[v]:
                count[v] += d

    def check(p):
        leaves = 0
        for v in graph[p]:
            if (not used[v]) and (count[v] == 2):
                if leaves > 0:
                    return False
                leaves = 1
        return True

    def vertices(p):
        if p == 0:
            return [y[0] + 1 for y in sorted(enumerate(graph[1:]), key=lambda x: length(x[1]))]
        else:
            return graph[p]

    start = vertices(0)[start] if start != 0 else 0
    # iterator = iter([start] + vertices(0) if start != 0 else vertices(0))
    level = [start] + vertices(0) if start != 0 else vertices(0)
    stack = []
    prev = 0
    i = 0
    while True:
        if i < len(level):
            current = level[i]
            i += 1
            if not check(current) or used[current]:
                continue

            used[current] = True
            stack.append((level, current, prev, i))
            prev = current
            n -= 1

            if n == 0:
                break

            # iterator = iter(vertices(current))
            level = vertices(current)
            i = 0

            process(prev, -1)
        else:
            if len(stack) == 0:
                return False

            n += 1
            (level, current, prev, i) = stack.pop()

            used[current] = False

            if prev > 0:
                process(prev, 1)

    return [f[1] for f in reversed(stack)]


starts = [0, 0, 0, 0, 0, 0, 7, 6, 0, 11, 5, 0, 11, 3, 0, 9, 0, 1, 13, 11, 24, 0, 0, 0, 0, 13, 23, 28, 0, 1, 6, 26, 14,
          45, 24, 41, 0, 2, 2, 9, 0, 7, 0, 1, 48, 36, 7, 4, 7, 3, 1, 1, 5, 15, 3, 0, 0, 36, 46, 9, 16, 64, 2, 11, 17, 0,
          4, 4, 23, 1, 1, 1, 5, 7, 3, 2, 0, 2, 2, 5, 0, 0, 16, 5, 2, 19, 5, 14, 7, 0, 2, 8, 4, 0, 1, 0, 4, 2, 4, 4, 6,
          16, 2, 1, 1, 2, 0, 4, 0, 6, 1, 2, 1, 0, 0, 4, 16, 4, 1, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 5, 2, 1, 0, 2, 1, 0, 1,
          6, 10, 3, 3, 6, 0, 1, 0, 0, 2, 11, 12, 0, 0, 0, 6, 0, 0, 1, 4, 11, 2, 1, 1, 1, 0, 3, 2, 1, 3, 1, 0, 0, 1, 0,
          5, 5, 0, 0, 0, 4, 2, 2, 7, 0, 1, 6, 10, 7, 1, 1, 11, 2, 0, 7, 1, 3, 3, 0, 4, 0, 5, 0, 0, 2, 0, 3, 0, 1, 0, 1,
          2, 1, 0, 1, 2, 0, 1, 2, 0, 5, 1, 2, 1, 0, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 4, 2, 0, 0, 0, 2, 0, 0, 1, 1, 3, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 1, 0, 1, 1, 0, 2, 1, 2, 1, 0, 0, 0, 1, 2, 2, 3, 0, 1, 0, 0, 0, 1, 0, 0, 1,
          1, 0, 0, 1, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 5,
          4, 1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 3, 0, 0, 0, 1, 1, 0, 2, 1, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0,
          0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,
          0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0, 1, 1, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0,
          1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]

medians = [14, 15, 16, 19, 20, 25, 21, 25, 26, 17, 27, 23, 30, 31, 30, 33, 31, 30, 24, 23, 32, 11, 11, 34, 34, 42, 43,
           42, 42, 42, 38, 39, 49, 51, 46, 41, 48, 42, 42, 42, 56, 56, 57, 57, 53, 48, 52, 59, 50, 49, 60, 54, 51, 69,
           67, 51, 42, 58, 71, 60, 62, 72, 51, 54, 54, 50, 53, 54, 54, 71, 79, 79, 72, 72, 69, 71, 88, 76, 75, 76, 89,
           93, 80, 91, 75, 84, 84, 82, 100, 98, 102, 77, 77, 70, 87, 75, 91, 87, 95, 75, 96, 91, 89, 99, 115, 96, 110,
           101, 91, 92, 91, 102, 122, 87, 87, 107, 111, 89, 94, 127, 94, 126, 94, 101, 108, 117, 134, 113, 109, 121,
           119, 141, 108, 137, 111, 116, 128, 146, 120, 111, 139, 124, 132, 135, 128, 119, 120, 133, 140, 132, 132, 132,
           138, 118, 137, 134, 148, 131, 142, 138, 138, 164, 120, 150, 144, 130, 125, 149, 124, 136, 155, 155, 132, 133,
           157, 154, 134, 136, 157, 163, 125, 167, 187, 166, 142, 126, 162, 147, 195, 152, 148, 149, 143, 181, 148, 153,
           181, 158, 181, 136, 177, 143, 155, 198, 155, 176, 178, 163, 165, 166, 191, 179, 169, 199, 173, 184, 167, 163,
           172, 199, 184, 203, 175, 208, 163, 183, 163, 162, 195, 164, 177, 203, 201, 187, 184, 213, 214, 197, 191, 211,
           244, 170, 205, 180, 222, 198, 161, 207, 212, 217, 220, 235, 217, 228, 199, 215, 233, 221, 227, 215, 178, 204,
           205, 196, 266, 202, 200, 190, 201, 212, 214, 207, 225, 197, 180, 214, 221, 197, 201, 251, 213, 215, 207, 235,
           252, 209, 252, 212, 213, 197, 257, 217, 269, 244, 276, 258, 190, 194, 244, 230, 250, 274, 228, 262, 248, 248,
           225, 218, 267, 239, 247, 269, 245, 255, 274, 227, 315, 316, 202, 288, 218, 217, 238, 206, 284, 289, 232, 268,
           279, 285, 254, 298, 233, 281, 232, 282, 288, 248, 280, 296, 275, 253, 279, 255, 262, 280, 242, 309, 322, 303,
           247, 271, 286, 275, 275, 263, 243, 326, 321, 358, 250, 326, 308, 300, 280, 260, 253, 246, 245, 323, 256, 270,
           281, 255, 304, 274, 339, 303, 281, 253, 318, 320, 283, 261, 289, 338, 284, 290, 286, 345, 289, 296, 271, 303,
           283, 283, 356, 260, 267, 327, 282, 266, 341, 322, 301, 302, 316, 254, 359, 267, 273, 341, 372, 372, 378, 356,
           367, 374, 281, 298, 338, 339, 349, 295, 387, 285, 281, 322, 313, 322, 290, 377, 321, 340, 286, 340, 355, 368,
           327, 319, 412, 437, 340, 332, 364, 316, 313, 299, 414, 275, 417, 279, 288, 391, 369, 290, 419, 375, 299, 382,
           314, 385, 380, 288, 376, 352, 301, 357, 341, 345, 353, 410, 311, 334, 422, 422, 399, 400, 404, 327, 370, 399,
           442, 388, 341, 423, 327, 327, 324, 379, 422, 332, 353, 363, 406, 357, 385, 404, 390, 421, 378, 389, 392, 381,
           499, 427, 348, 362, 311, 401, 331, 343, 454, 346, 387, 450, 334, 386, 346, 445, 441, 428, 437, 451, 374, 406,
           411, 432, 318, 483, 473, 383, 493, 423, 357, 342, 361, 393, 484, 403, 346, 364, 396, 395, 490, 506, 391, 497,
           485, 376, 382, 392, 506, 353, 398, 384, 353, 384, 407, 549, 465, 511, 433, 398, 388, 367, 530, 515, 374, 403,
           458, 361, 443, 457, 458, 454, 433, 372, 368, 449, 391, 463, 525, 406, 499, 541, 529, 431, 503, 410, 453, 545,
           449, 423, 492, 387, 544, 430, 551, 410, 481, 435, 500, 396, 496, 546, 524, 490, 599, 536, 491, 425, 479, 460,
           457, 457, 439, 522, 545, 506, 504, 519, 558, 546, 389, 524, 439, 531, 470, 469, 492, 521, 559, 532, 482, 489,
           445, 536, 443, 459, 469, 417, 503, 405, 422, 588, 439, 470, 574, 532, 600, 440, 516, 473, 516, 523, 490, 585,
           446, 445, 546, 506, 456, 520, 596, 512, 568, 599, 440, 512, 477, 540, 588, 604, 529, 588, 432, 579, 618, 560,
           464, 631, 586, 573, 441, 509, 478, 625, 523, 462, 513, 513, 600, 542, 468, 434, 522, 610, 467, 608, 603, 460,
           592, 444, 451, 570, 558, 641, 619, 434, 609, 453, 519, 631, 433, 683, 584, 668, 510, 488, 486, 536, 627, 612,
           534, 457, 537, 504, 596, 504, 625, 640, 478, 533, 530, 534, 674, 488, 612, 511, 678, 654, 584, 456, 640, 583,
           619, 496, 683, 506, 527, 497, 465, 669, 548, 699, 646, 630, 648, 549, 591, 563, 581, 540, 573, 634, 477, 470,
           483, 492, 555, 601, 714, 485, 552, 649, 634, 721, 705, 638, 522, 690, 467, 695, 575, 627, 535, 614, 707, 714,
           614, 619, 710, 681, 474, 609, 645, 680, 595, 474, 506, 617, 626, 619, 678, 560, 644, 647, 619, 587, 676, 651,
           595, 672, 511, 589, 711, 519, 614, 648, 626, 750, 501, 764, 537, 584, 671, 526, 671, 502, 758, 627, 733, 755,
           514, 498, 540, 523, 548, 605, 544, 535, 587, 520, 771, 691, 638, 777, 641, 552, 656, 684, 641, 659, 712, 589,
           629, 746, 697, 709, 737, 648, 669, 683, 727, 733, 655, 643, 530, 790, 586, 677, 709, 674, 505, 754, 758, 771,
           509, 536, 663, 727, 822, 612, 698, 680, 581, 737, 734, 819, 617, 683, 672, 708, 703, 666, 772, 802, 554, 677,
           742, 622, 712, 626, 708, 821, 744, 623, 575, 620, 708, 648, 718, 770, 869, 566, 629, 623, 781, 632, 633, 625,
           576, 606, 659, 584, 749, 611, 858, 860, 659, 603, 845, 806, 535, 919, 606, 651, 870, 621, 795, 583, 810, 780,
           763, 788, 607, 882, 714, 827, 656, 657, 653, 622, 816, 836, 811, 556, 696, 749, 701, 626, 577, 803, 737, 605,
           598, 685, 655, 738, 803, 850, 569, 815, 782, 878]
